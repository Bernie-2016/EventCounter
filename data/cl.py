import os, itertools
from collections import defaultdict as ddict

# Generated by https://github.com/coventry/cl-zip-codes
datapath = os.path.dirname(__file__)

ziploc = {}
for l in open(os.path.join(datapath, 'zipstate.txt')):
    l = l.split()
    zip, state = l[:2]
    county = ' '.join(l[2:]).replace(' County', '')
    county = county.replace(' ', '').lower()
    ziploc[zip] = state, county

# Wyoming regions, by county
wyoming_regions = {
    'northwestwy': 'park bighorn washakie hotsprings fremont'.split(),
    'southwestwy': 'teton sublette lincoln uinta sweetwater'.split(),
    'centralwy'  : 'natrona converse carbon'.split(),
    'southeastwy': 'albany platte goshen laramie'.split(),
    'northeastwy': 'sheridan johnson campbell crook weston niobrara'.split(),
    }
wyoming_county_region = dict(
    itertools.chain(*(((c, r) for c in counties)
                      for r, counties in wyoming_regions.items())))

zipcl = {}
for line in open(os.path.join(datapath, 'more-cl-zipcodes.txt')):
    region, z = line.split()
    state, county = ziploc[z]
    if state == 'HI':
        region = county # See github issue 5 comments from michelledeatrick
    elif state == 'WY':
        region = wyoming_county_region[county]
    zipcl[z] = region

clzip = ddict(list)
for zip, region in zipcl.items():
    clzip[region].append(zip)

conus_states = set(l.split()[-1] for l in open(os.path.join(datapath, 'states.txt')))

def conus_p(z):
    return ziploc[z][0] in conus_states
